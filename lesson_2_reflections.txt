What happens when you initialize a repository?
Git will make a .git file and will be ready to track files we ask it to.
Why do you need to do it?
If one wants to use git for his/her version control than initializing a repo
is the first step.

How is the staging area different from the working directory and the repository?
The staging area is what is going to be the next commit made and does not have
to have the same corresponding files as either the working directory or repo
What value do you think it offers?
The staging area helps one be able to make logical changes and keep organized.

How can you use the staging are to make sure you have one commit per logical
change?
By combining the 'git status' command we can use the staging area as a guide
or reference to know what changes have been made as well as what are the 
differences between current working directory files vs what is being staged.

What are some situations when branches would be helpful in keeping your history
organized?
Branches are useful during experimental changes to a program.
How would branches help?
Creating branches helps keep seperate repositories that are identical at the 
time of creation but will undergo individual changes that one does not want
to have such changes conflict with the different versions.

How do the diagrams help you visualize the branch structure?
They show where the branches were once identical and the commit routes

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result is that you merge two paths into one and commits made by both branches. It is represented in the diagram in manner that reflects that through which ever branch becomes the head we are still able to reach commits through either path.